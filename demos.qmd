---
title: "Demos"
execute: 
  echo: false
  eval: true
---

```{r}
create_demo_card <- function(title, description, repo_name, icon) {
  cat(
    '::: {.grid .align-items-center}\n\n',
    '::: {.g-col-1 .text-center}\n\n',
    '<i class="fa ', icon, ' fa-2x" aria-hidden="true" style="color: #00bc8c;"></i>\n\n',
    ':::\n\n',
    '::: {.g-col-9}\n\n',
    '### ', title, '\n\n',
    description, '\n\n',
    ':::\n\n',
    '::: {.g-col-2 .text-end}\n\n',
    '[![GitHub](https://img.shields.io/badge/view_on-GitHub-00bc8c?style=for-the-badge&logo=GitHub)](https://github.com/surveydown-dev/', repo_name, ')\n\n',
    ':::\n\n',
    ':::\n\n',
    sep = ""
  )
}

build_demo_grid <- function(df) {
  for (i in 1:nrow(df)) {
    create_demo_card(
      title = df$title[i],
      description = df$description[i],
      repo_name = df$repo_name[i],
      icon = df$icon[i]
    )
    cat('\n')  # Add a newline between entries for better readability
  }
}
```

```{r}
#| results: asis

df <- data.frame(
  title = c(
    "Question Types", 
    "Conditional Display", 
    "Conditional Skipping", 
    "Randomized Question Labels",
    "Randomized Question Labels (Predefined)",
    "Reactive Plot",
    "Choice-Based Conjoint"
  ),
  repo_name = c(
    "demo-question-types", 
    "demo-show-if", 
    "demo-skip-if", 
    "demo-randomized-question-labels",
    "demo-randomized-question-labels-predefined",
    "demo-reactive-plot",
    "demo-choice-based-conjoint"
  ),
  description = c(
    "A demo of all the [question types](question-types.html) currently supported by surveydown.",
    "A demo of how to implement [conditional display](config-options.html#conditional-display) (showing a question based on a previous response).",
    "A demo of how to implement [conditional skipping](config-options.html#conditional-skipping) (skipping to a page based on a previous response).",
    "A demo of how to implement [randomized question labels](reactivity.html#randomizing-question-labels).",
    "A demo of how to implement randomized question labels using [predefined random labels](reactivity.html#pre-defined-randomization).",
    "A demo of how to implement reactive plots in your survey.", 
    "A demo of how to implement a choice-based conjoint survey with surveydown."
  ), 
  icon = c(
    "fa-list-ul",
    "fa-eye",
    "fa-forward",
    "fa-random",
    "fa-shuffle",
    "fa-chart-line",
    "fa-balance-scale"
  )
)

build_demo_grid(df)
```

