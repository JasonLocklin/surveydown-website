---
title: "Tips"
---

This page has some helpful suggestions for working with surveydown surveys.

## Splitting the server chunk into a separate file

The server chunk contains many components:

1. The database setup via `sd_database()`, which defines your Supabase connection.
2. Any configuration options via `sd_config()`, such as conditional show logic, skip logic, required questions, etc.
3. Any other code, such as reactive questions (`sd_question(reactive = TRUE)`), other variables you wish to store in your database, etc. 

As your survey grows in length and complexity, the server chunk can get quite long, and scrolling up and down to edit it along with the main survey content can be annoying. To address this, it can be helpful to split up your server code into a separate file so that you can open it in a separate tab in your editor.

To enable this, create a `server.R` file (can be any name you wish) in your project directory, and put all of your server code in this file except for the call to `sd_server()`. Then you can source the file into the server chunk like this:

```{r}
#| echo: fenced
#| context: server

source("server.R")

sd_server(
  input   = input,
  output  = output,
  session = session,
  config  = config,
  db      = db
)
```

With this setup, your server code chunk will remain unchanged and you will only need to edit your `server.R` file to customize your server settings.

::: {.callout-important}

Note that you still need to include the `sd_server()` function in your server code chunk after sourcing the `server.R` file. 

:::
